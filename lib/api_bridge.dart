// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.2.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'dart:ffi' as ffi;

abstract class FluentLib {
  Future<ResultDTO> init({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kInitConstMeta;

  Future<ImportProtoResult> importProto(
      {required int projectId,
      required List<String> protoFiles,
      required List<String> importPaths,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kImportProtoConstMeta;

  Future<ProtoFileResult> getProtoFile({required int projectId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetProtoFileConstMeta;

  Future<ListNavProjectResult> listNavProject({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kListNavProjectConstMeta;

  Future<CreateProjectResult> createProject(
      {required String name, required ReqType reqType, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateProjectConstMeta;

  Future<GetConfigResult> getConfig({required String key, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetConfigConstMeta;

  Future<GetBatchConfigResult> getBatchConfig(
      {required List<String> keys, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetBatchConfigConstMeta;

  Future<ResultDTO> putConfig(
      {required String key, required String value, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPutConfigConstMeta;

  Future<ResultDTO> deleteConfigs({required List<String> keys, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDeleteConfigsConstMeta;

  Future<ResultDTO> deleteProject({required int projectId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDeleteProjectConstMeta;

  Future<ResultDTO> updateProjectName(
      {required int projectId, required String newName, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateProjectNameConstMeta;

  Future<GetRequestResult> getRequest({required int requestId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetRequestConstMeta;

  Future<ResultDTO> updateRequest(
      {required UpdateRequest request, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateRequestConstMeta;

  Future<SendRequestResult> sendRequest(
      {required SendRequest param, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendRequestConstMeta;

  Future<CreateEnvironmentResult> createEnv(
      {required CreateEnvironment param, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateEnvConstMeta;

  Future<ResultDTO> updateEnvVariable(
      {required UpdateEnvironment param, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateEnvVariableConstMeta;

  Future<ResultDTO> updateEnvName(
      {required String newName, required String oldName, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUpdateEnvNameConstMeta;

  Future<ResultDTO> deleteEnvVariable({required int id, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDeleteEnvVariableConstMeta;

  Future<ResultDTO> deleteEnv({required String envName, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDeleteEnvConstMeta;

  Future<ListEnvironmentResult> listEnv({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kListEnvConstMeta;

  Future<UniqueIdResult> uniqueId({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUniqueIdConstMeta;

  /// 获取 lib 版本信息
  Future<LibInfo> libInfo({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kLibInfoConstMeta;

  Future<ListRequestLogResult> listNextRequestLog(
      {required int lastId,
      required String keyword,
      required int pageSize,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kListNextRequestLogConstMeta;

  Future<ListRequestLogResult> listPreRequestLog(
      {required int firstId,
      required String keyword,
      required int pageSize,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kListPreRequestLogConstMeta;

  Future<GetRequestLogResult> getLatestRequestLog(
      {required int requestId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetLatestRequestLogConstMeta;
}

enum Code {
  OK,
  ProtoParseError,
  LibError,
  InvalidArgument,
  RespInvalidArgument,
  TonicError,
  HexError,
  SqliteError,
  SerdeJsonError,
  ProtoBufError,
  ChronError,
  AnyhowError,
}

class CreateEnvironment {
  final String envName;
  final String name;
  final String value;

  const CreateEnvironment({
    required this.envName,
    required this.name,
    required this.value,
  });
}

class CreateEnvironmentResult {
  final Code code;
  final String msg;
  final EnvVariableDTO? data;

  const CreateEnvironmentResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class CreateProjectResult {
  final Code code;
  final String msg;
  final NavProjectDTO? data;

  const CreateProjectResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class EntryDTO {
  final String name;
  final String value;

  const EntryDTO({
    required this.name,
    required this.value,
  });
}

class EnvVariableDTO {
  final int id;
  final String envName;
  final String name;
  final String value;

  const EnvVariableDTO({
    required this.id,
    required this.envName,
    required this.name,
    required this.value,
  });
}

class EnvironmentDTO {
  final String envName;
  final List<EnvVariableDTO> list;

  const EnvironmentDTO({
    required this.envName,
    required this.list,
  });
}

class Error {
  final Code code;
  final String msg;

  const Error({
    required this.code,
    required this.msg,
  });
}

class GetBatchConfigResult {
  final Code code;
  final String msg;
  final List<EntryDTO> data;

  const GetBatchConfigResult({
    required this.code,
    required this.msg,
    required this.data,
  });
}

class GetConfigResult {
  final Code code;
  final String msg;
  final String? data;

  const GetConfigResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class GetRequestLogResult {
  final Code code;
  final String msg;
  final RequestLogDTO? data;

  const GetRequestLogResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class GetRequestResult {
  final Code code;
  final String msg;
  final RequestDTO? data;

  const GetRequestResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class ImportProtoResult {
  final Code code;
  final String msg;
  final NavProjectDTO? data;

  const ImportProtoResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class LibInfo {
  final String version;
  final int buildNum;
  final String buildAt;
  final String commitHash;
  final Code code;
  final ReqType? reqType;

  const LibInfo({
    required this.version,
    required this.buildNum,
    required this.buildAt,
    required this.commitHash,
    required this.code,
    this.reqType,
  });
}

class ListEnvironmentResult {
  final Code code;
  final String msg;
  final List<EnvironmentDTO>? data;

  const ListEnvironmentResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class ListNavProjectResult {
  final Code code;
  final String msg;
  final List<NavProjectDTO> data;

  const ListNavProjectResult({
    required this.code,
    required this.msg,
    required this.data,
  });
}

class ListRequestLogData {
  final String keyword;
  final int lastId;
  final int pageSize;
  final int firstId;
  final List<RequestLogDTO> requestLogs;

  const ListRequestLogData({
    required this.keyword,
    required this.lastId,
    required this.pageSize,
    required this.firstId,
    required this.requestLogs,
  });
}

class ListRequestLogResult {
  final Code code;
  final String msg;
  final ListRequestLogData? data;

  const ListRequestLogResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

class NavProjectDTO {
  final int id;
  final int projectId;
  final String projectName;
  final ReqType reqType;
  final List<NavServiceDTO> services;
  final List<NavRequestDTO> requests;
  final int orderNo;

  const NavProjectDTO({
    required this.id,
    required this.projectId,
    required this.projectName,
    required this.reqType,
    required this.services,
    required this.requests,
    required this.orderNo,
  });
}

class NavRequestDTO {
  final int id;
  final String name;

  const NavRequestDTO({
    required this.id,
    required this.name,
  });
}

class NavServiceDTO {
  final String name;
  final List<NavRequestDTO> requests;

  const NavServiceDTO({
    required this.name,
    required this.requests,
  });
}

class ProtoFileDTO {
  final List<String> protoFiles;
  final List<String> importPaths;

  const ProtoFileDTO({
    required this.protoFiles,
    required this.importPaths,
  });
}

class ProtoFileResult {
  final Code code;
  final String msg;
  final ProtoFileDTO? data;

  const ProtoFileResult({
    required this.code,
    required this.msg,
    this.data,
  });
}

enum ReqType {
  HTTP,
  GRPC,
}

class RequestDTO {
  final int id;
  final int projectId;
  final String name;
  final String url;
  final ReqType reqType;
  final String service;
  final String method;
  final List<EntryDTO> headers;
  final List<EntryDTO> params;
  final String reqJson;
  final String respJson;

  const RequestDTO({
    required this.id,
    required this.projectId,
    required this.name,
    required this.url,
    required this.reqType,
    required this.service,
    required this.method,
    required this.headers,
    required this.params,
    required this.reqJson,
    required this.respJson,
  });
}

class RequestLogData {
  final List<EntryDTO> metadata;
  final String body;

  const RequestLogData({
    required this.metadata,
    required this.body,
  });
}

class RequestLogDTO {
  final int id;
  final int requestId;
  final String baseUrl;
  final String path;
  final Error? error;
  final SendRequestInfo info;
  final RequestLogData request;
  final RequestLogData? response;
  final String createdAt;

  const RequestLogDTO({
    required this.id,
    required this.requestId,
    required this.baseUrl,
    required this.path,
    this.error,
    required this.info,
    required this.request,
    this.response,
    required this.createdAt,
  });
}

class ResponseDTO {
  final List<EntryDTO> headers;
  final String body;

  const ResponseDTO({
    required this.headers,
    required this.body,
  });
}

class ResultDTO {
  final Code code;
  final String msg;

  const ResultDTO({
    required this.code,
    required this.msg,
  });
}

class SendRequest {
  final int requestId;
  final String url;
  final ReqType reqType;
  final List<EntryDTO> headers;
  final List<EntryDTO> params;
  final String reqJson;
  final String envName;

  const SendRequest({
    required this.requestId,
    required this.url,
    required this.reqType,
    required this.headers,
    required this.params,
    required this.reqJson,
    required this.envName,
  });
}

class SendRequestInfo {
  final List<EntryDTO> infos;

  const SendRequestInfo({
    required this.infos,
  });
}

class SendRequestResult {
  final Code code;
  final String msg;
  final SendRequestInfo info;
  final ResponseDTO? resp;

  const SendRequestResult({
    required this.code,
    required this.msg,
    required this.info,
    this.resp,
  });
}

class UniqueIdResult {
  final Code code;
  final String msg;
  final int data;

  const UniqueIdResult({
    required this.code,
    required this.msg,
    required this.data,
  });
}

class UpdateEnvironment {
  final int id;
  final String name;
  final String value;

  const UpdateEnvironment({
    required this.id,
    required this.name,
    required this.value,
  });
}

class UpdateRequest {
  final int id;
  final String name;
  final String url;
  final String method;
  final List<EntryDTO> headers;
  final List<EntryDTO> params;
  final String reqJson;
  final String respJson;

  const UpdateRequest({
    required this.id,
    required this.name,
    required this.url,
    required this.method,
    required this.headers,
    required this.params,
    required this.reqJson,
    required this.respJson,
  });
}

class FluentLibImpl implements FluentLib {
  final FluentLibPlatform _platform;
  factory FluentLibImpl(ExternalLibrary dylib) =>
      FluentLibImpl.raw(FluentLibPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory FluentLibImpl.wasm(FutureOr<WasmModule> module) =>
      FluentLibImpl(module as ExternalLibrary);
  FluentLibImpl.raw(this._platform);
  Future<ResultDTO> init({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_init(port_),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kInitConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kInitConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "init",
        argNames: [],
      );

  Future<ImportProtoResult> importProto(
      {required int projectId,
      required List<String> protoFiles,
      required List<String> importPaths,
      dynamic hint}) {
    var arg0 = _platform.api2wire_i64(projectId);
    var arg1 = _platform.api2wire_StringList(protoFiles);
    var arg2 = _platform.api2wire_StringList(importPaths);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_import_proto(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_import_proto_result,
      constMeta: kImportProtoConstMeta,
      argValues: [projectId, protoFiles, importPaths],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kImportProtoConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "import_proto",
        argNames: ["projectId", "protoFiles", "importPaths"],
      );

  Future<ProtoFileResult> getProtoFile({required int projectId, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(projectId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_proto_file(port_, arg0),
      parseSuccessData: _wire2api_proto_file_result,
      constMeta: kGetProtoFileConstMeta,
      argValues: [projectId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetProtoFileConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_proto_file",
        argNames: ["projectId"],
      );

  Future<ListNavProjectResult> listNavProject({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_list_nav_project(port_),
      parseSuccessData: _wire2api_list_nav_project_result,
      constMeta: kListNavProjectConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kListNavProjectConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "list_nav_project",
        argNames: [],
      );

  Future<CreateProjectResult> createProject(
      {required String name, required ReqType reqType, dynamic hint}) {
    var arg0 = _platform.api2wire_String(name);
    var arg1 = api2wire_req_type(reqType);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_create_project(port_, arg0, arg1),
      parseSuccessData: _wire2api_create_project_result,
      constMeta: kCreateProjectConstMeta,
      argValues: [name, reqType],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateProjectConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "create_project",
        argNames: ["name", "reqType"],
      );

  Future<GetConfigResult> getConfig({required String key, dynamic hint}) {
    var arg0 = _platform.api2wire_String(key);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_config(port_, arg0),
      parseSuccessData: _wire2api_get_config_result,
      constMeta: kGetConfigConstMeta,
      argValues: [key],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetConfigConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_config",
        argNames: ["key"],
      );

  Future<GetBatchConfigResult> getBatchConfig(
      {required List<String> keys, dynamic hint}) {
    var arg0 = _platform.api2wire_StringList(keys);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_batch_config(port_, arg0),
      parseSuccessData: _wire2api_get_batch_config_result,
      constMeta: kGetBatchConfigConstMeta,
      argValues: [keys],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetBatchConfigConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_batch_config",
        argNames: ["keys"],
      );

  Future<ResultDTO> putConfig(
      {required String key, required String value, dynamic hint}) {
    var arg0 = _platform.api2wire_String(key);
    var arg1 = _platform.api2wire_String(value);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_put_config(port_, arg0, arg1),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kPutConfigConstMeta,
      argValues: [key, value],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kPutConfigConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "put_config",
        argNames: ["key", "value"],
      );

  Future<ResultDTO> deleteConfigs({required List<String> keys, dynamic hint}) {
    var arg0 = _platform.api2wire_StringList(keys);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_delete_configs(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kDeleteConfigsConstMeta,
      argValues: [keys],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDeleteConfigsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "delete_configs",
        argNames: ["keys"],
      );

  Future<ResultDTO> deleteProject({required int projectId, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(projectId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_delete_project(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kDeleteProjectConstMeta,
      argValues: [projectId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDeleteProjectConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "delete_project",
        argNames: ["projectId"],
      );

  Future<ResultDTO> updateProjectName(
      {required int projectId, required String newName, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(projectId);
    var arg1 = _platform.api2wire_String(newName);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_update_project_name(port_, arg0, arg1),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kUpdateProjectNameConstMeta,
      argValues: [projectId, newName],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateProjectNameConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "update_project_name",
        argNames: ["projectId", "newName"],
      );

  Future<GetRequestResult> getRequest({required int requestId, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(requestId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_request(port_, arg0),
      parseSuccessData: _wire2api_get_request_result,
      constMeta: kGetRequestConstMeta,
      argValues: [requestId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetRequestConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_request",
        argNames: ["requestId"],
      );

  Future<ResultDTO> updateRequest(
      {required UpdateRequest request, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_update_request(request);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_request(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kUpdateRequestConstMeta,
      argValues: [request],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateRequestConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "update_request",
        argNames: ["request"],
      );

  Future<SendRequestResult> sendRequest(
      {required SendRequest param, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_send_request(param);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_request(port_, arg0),
      parseSuccessData: _wire2api_send_request_result,
      constMeta: kSendRequestConstMeta,
      argValues: [param],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendRequestConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "send_request",
        argNames: ["param"],
      );

  Future<CreateEnvironmentResult> createEnv(
      {required CreateEnvironment param, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_create_environment(param);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_env(port_, arg0),
      parseSuccessData: _wire2api_create_environment_result,
      constMeta: kCreateEnvConstMeta,
      argValues: [param],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateEnvConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "create_env",
        argNames: ["param"],
      );

  Future<ResultDTO> updateEnvVariable(
      {required UpdateEnvironment param, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_update_environment(param);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_update_env_variable(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kUpdateEnvVariableConstMeta,
      argValues: [param],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateEnvVariableConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "update_env_variable",
        argNames: ["param"],
      );

  Future<ResultDTO> updateEnvName(
      {required String newName, required String oldName, dynamic hint}) {
    var arg0 = _platform.api2wire_String(newName);
    var arg1 = _platform.api2wire_String(oldName);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_update_env_name(port_, arg0, arg1),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kUpdateEnvNameConstMeta,
      argValues: [newName, oldName],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUpdateEnvNameConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "update_env_name",
        argNames: ["newName", "oldName"],
      );

  Future<ResultDTO> deleteEnvVariable({required int id, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(id);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_delete_env_variable(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kDeleteEnvVariableConstMeta,
      argValues: [id],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDeleteEnvVariableConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "delete_env_variable",
        argNames: ["id"],
      );

  Future<ResultDTO> deleteEnv({required String envName, dynamic hint}) {
    var arg0 = _platform.api2wire_String(envName);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_delete_env(port_, arg0),
      parseSuccessData: _wire2api_result_dto,
      constMeta: kDeleteEnvConstMeta,
      argValues: [envName],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDeleteEnvConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "delete_env",
        argNames: ["envName"],
      );

  Future<ListEnvironmentResult> listEnv({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_list_env(port_),
      parseSuccessData: _wire2api_list_environment_result,
      constMeta: kListEnvConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kListEnvConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "list_env",
        argNames: [],
      );

  Future<UniqueIdResult> uniqueId({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_unique_id(port_),
      parseSuccessData: _wire2api_unique_id_result,
      constMeta: kUniqueIdConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUniqueIdConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "unique_id",
        argNames: [],
      );

  Future<LibInfo> libInfo({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_lib_info(port_),
      parseSuccessData: _wire2api_lib_info,
      constMeta: kLibInfoConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kLibInfoConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "lib_info",
        argNames: [],
      );

  Future<ListRequestLogResult> listNextRequestLog(
      {required int lastId,
      required String keyword,
      required int pageSize,
      dynamic hint}) {
    var arg0 = _platform.api2wire_i64(lastId);
    var arg1 = _platform.api2wire_String(keyword);
    var arg2 = api2wire_u16(pageSize);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_list_next_request_log(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_list_request_log_result,
      constMeta: kListNextRequestLogConstMeta,
      argValues: [lastId, keyword, pageSize],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kListNextRequestLogConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "list_next_request_log",
        argNames: ["lastId", "keyword", "pageSize"],
      );

  Future<ListRequestLogResult> listPreRequestLog(
      {required int firstId,
      required String keyword,
      required int pageSize,
      dynamic hint}) {
    var arg0 = _platform.api2wire_i64(firstId);
    var arg1 = _platform.api2wire_String(keyword);
    var arg2 = api2wire_u16(pageSize);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_list_pre_request_log(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_list_request_log_result,
      constMeta: kListPreRequestLogConstMeta,
      argValues: [firstId, keyword, pageSize],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kListPreRequestLogConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "list_pre_request_log",
        argNames: ["firstId", "keyword", "pageSize"],
      );

  Future<GetRequestLogResult> getLatestRequestLog(
      {required int requestId, dynamic hint}) {
    var arg0 = _platform.api2wire_i64(requestId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_get_latest_request_log(port_, arg0),
      parseSuccessData: _wire2api_get_request_log_result,
      constMeta: kGetLatestRequestLogConstMeta,
      argValues: [requestId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetLatestRequestLogConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_latest_request_log",
        argNames: ["requestId"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  List<String> _wire2api_StringList(dynamic raw) {
    return (raw as List<dynamic>).cast<String>();
  }

  EnvVariableDTO _wire2api_box_autoadd_env_variable_dto(dynamic raw) {
    return _wire2api_env_variable_dto(raw);
  }

  Error _wire2api_box_autoadd_error(dynamic raw) {
    return _wire2api_error(raw);
  }

  ListRequestLogData _wire2api_box_autoadd_list_request_log_data(dynamic raw) {
    return _wire2api_list_request_log_data(raw);
  }

  NavProjectDTO _wire2api_box_autoadd_nav_project_dto(dynamic raw) {
    return _wire2api_nav_project_dto(raw);
  }

  ProtoFileDTO _wire2api_box_autoadd_proto_file_dto(dynamic raw) {
    return _wire2api_proto_file_dto(raw);
  }

  ReqType _wire2api_box_autoadd_req_type(dynamic raw) {
    return _wire2api_req_type(raw);
  }

  RequestDTO _wire2api_box_autoadd_request_dto(dynamic raw) {
    return _wire2api_request_dto(raw);
  }

  RequestLogData _wire2api_box_autoadd_request_log_data(dynamic raw) {
    return _wire2api_request_log_data(raw);
  }

  RequestLogDTO _wire2api_box_autoadd_request_log_dto(dynamic raw) {
    return _wire2api_request_log_dto(raw);
  }

  ResponseDTO _wire2api_box_autoadd_response_dto(dynamic raw) {
    return _wire2api_response_dto(raw);
  }

  Code _wire2api_code(dynamic raw) {
    return Code.values[raw];
  }

  CreateEnvironmentResult _wire2api_create_environment_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return CreateEnvironmentResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_env_variable_dto(arr[2]),
    );
  }

  CreateProjectResult _wire2api_create_project_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return CreateProjectResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_nav_project_dto(arr[2]),
    );
  }

  EntryDTO _wire2api_entry_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return EntryDTO(
      name: _wire2api_String(arr[0]),
      value: _wire2api_String(arr[1]),
    );
  }

  EnvVariableDTO _wire2api_env_variable_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return EnvVariableDTO(
      id: _wire2api_i64(arr[0]),
      envName: _wire2api_String(arr[1]),
      name: _wire2api_String(arr[2]),
      value: _wire2api_String(arr[3]),
    );
  }

  EnvironmentDTO _wire2api_environment_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return EnvironmentDTO(
      envName: _wire2api_String(arr[0]),
      list: _wire2api_list_env_variable_dto(arr[1]),
    );
  }

  Error _wire2api_error(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return Error(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
    );
  }

  GetBatchConfigResult _wire2api_get_batch_config_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return GetBatchConfigResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_list_entry_dto(arr[2]),
    );
  }

  GetConfigResult _wire2api_get_config_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return GetConfigResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_String(arr[2]),
    );
  }

  GetRequestLogResult _wire2api_get_request_log_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return GetRequestLogResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_request_log_dto(arr[2]),
    );
  }

  GetRequestResult _wire2api_get_request_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return GetRequestResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_request_dto(arr[2]),
    );
  }

  int _wire2api_i32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_i64(dynamic raw) {
    return castInt(raw);
  }

  ImportProtoResult _wire2api_import_proto_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ImportProtoResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_nav_project_dto(arr[2]),
    );
  }

  LibInfo _wire2api_lib_info(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 6)
      throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return LibInfo(
      version: _wire2api_String(arr[0]),
      buildNum: _wire2api_i64(arr[1]),
      buildAt: _wire2api_String(arr[2]),
      commitHash: _wire2api_String(arr[3]),
      code: _wire2api_code(arr[4]),
      reqType: _wire2api_opt_box_autoadd_req_type(arr[5]),
    );
  }

  List<EntryDTO> _wire2api_list_entry_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_entry_dto).toList();
  }

  List<EnvVariableDTO> _wire2api_list_env_variable_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_env_variable_dto).toList();
  }

  List<EnvironmentDTO> _wire2api_list_environment_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_environment_dto).toList();
  }

  ListEnvironmentResult _wire2api_list_environment_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ListEnvironmentResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_list_environment_dto(arr[2]),
    );
  }

  List<NavProjectDTO> _wire2api_list_nav_project_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_nav_project_dto).toList();
  }

  ListNavProjectResult _wire2api_list_nav_project_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ListNavProjectResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_list_nav_project_dto(arr[2]),
    );
  }

  List<NavRequestDTO> _wire2api_list_nav_request_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_nav_request_dto).toList();
  }

  List<NavServiceDTO> _wire2api_list_nav_service_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_nav_service_dto).toList();
  }

  ListRequestLogData _wire2api_list_request_log_data(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return ListRequestLogData(
      keyword: _wire2api_String(arr[0]),
      lastId: _wire2api_i64(arr[1]),
      pageSize: _wire2api_u16(arr[2]),
      firstId: _wire2api_i64(arr[3]),
      requestLogs: _wire2api_list_request_log_dto(arr[4]),
    );
  }

  List<RequestLogDTO> _wire2api_list_request_log_dto(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_request_log_dto).toList();
  }

  ListRequestLogResult _wire2api_list_request_log_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ListRequestLogResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_list_request_log_data(arr[2]),
    );
  }

  NavProjectDTO _wire2api_nav_project_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 7)
      throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return NavProjectDTO(
      id: _wire2api_i64(arr[0]),
      projectId: _wire2api_i64(arr[1]),
      projectName: _wire2api_String(arr[2]),
      reqType: _wire2api_req_type(arr[3]),
      services: _wire2api_list_nav_service_dto(arr[4]),
      requests: _wire2api_list_nav_request_dto(arr[5]),
      orderNo: _wire2api_i32(arr[6]),
    );
  }

  NavRequestDTO _wire2api_nav_request_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return NavRequestDTO(
      id: _wire2api_i64(arr[0]),
      name: _wire2api_String(arr[1]),
    );
  }

  NavServiceDTO _wire2api_nav_service_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return NavServiceDTO(
      name: _wire2api_String(arr[0]),
      requests: _wire2api_list_nav_request_dto(arr[1]),
    );
  }

  String? _wire2api_opt_String(dynamic raw) {
    return raw == null ? null : _wire2api_String(raw);
  }

  EnvVariableDTO? _wire2api_opt_box_autoadd_env_variable_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_env_variable_dto(raw);
  }

  Error? _wire2api_opt_box_autoadd_error(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_error(raw);
  }

  ListRequestLogData? _wire2api_opt_box_autoadd_list_request_log_data(
      dynamic raw) {
    return raw == null
        ? null
        : _wire2api_box_autoadd_list_request_log_data(raw);
  }

  NavProjectDTO? _wire2api_opt_box_autoadd_nav_project_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_nav_project_dto(raw);
  }

  ProtoFileDTO? _wire2api_opt_box_autoadd_proto_file_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_proto_file_dto(raw);
  }

  ReqType? _wire2api_opt_box_autoadd_req_type(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_req_type(raw);
  }

  RequestDTO? _wire2api_opt_box_autoadd_request_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_request_dto(raw);
  }

  RequestLogData? _wire2api_opt_box_autoadd_request_log_data(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_request_log_data(raw);
  }

  RequestLogDTO? _wire2api_opt_box_autoadd_request_log_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_request_log_dto(raw);
  }

  ResponseDTO? _wire2api_opt_box_autoadd_response_dto(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_response_dto(raw);
  }

  List<EnvironmentDTO>? _wire2api_opt_list_environment_dto(dynamic raw) {
    return raw == null ? null : _wire2api_list_environment_dto(raw);
  }

  ProtoFileDTO _wire2api_proto_file_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ProtoFileDTO(
      protoFiles: _wire2api_StringList(arr[0]),
      importPaths: _wire2api_StringList(arr[1]),
    );
  }

  ProtoFileResult _wire2api_proto_file_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ProtoFileResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_opt_box_autoadd_proto_file_dto(arr[2]),
    );
  }

  ReqType _wire2api_req_type(dynamic raw) {
    return ReqType.values[raw];
  }

  RequestDTO _wire2api_request_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 11)
      throw Exception('unexpected arr length: expect 11 but see ${arr.length}');
    return RequestDTO(
      id: _wire2api_i64(arr[0]),
      projectId: _wire2api_i64(arr[1]),
      name: _wire2api_String(arr[2]),
      url: _wire2api_String(arr[3]),
      reqType: _wire2api_req_type(arr[4]),
      service: _wire2api_String(arr[5]),
      method: _wire2api_String(arr[6]),
      headers: _wire2api_list_entry_dto(arr[7]),
      params: _wire2api_list_entry_dto(arr[8]),
      reqJson: _wire2api_String(arr[9]),
      respJson: _wire2api_String(arr[10]),
    );
  }

  RequestLogData _wire2api_request_log_data(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return RequestLogData(
      metadata: _wire2api_list_entry_dto(arr[0]),
      body: _wire2api_String(arr[1]),
    );
  }

  RequestLogDTO _wire2api_request_log_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 9)
      throw Exception('unexpected arr length: expect 9 but see ${arr.length}');
    return RequestLogDTO(
      id: _wire2api_i64(arr[0]),
      requestId: _wire2api_i64(arr[1]),
      baseUrl: _wire2api_String(arr[2]),
      path: _wire2api_String(arr[3]),
      error: _wire2api_opt_box_autoadd_error(arr[4]),
      info: _wire2api_send_request_info(arr[5]),
      request: _wire2api_request_log_data(arr[6]),
      response: _wire2api_opt_box_autoadd_request_log_data(arr[7]),
      createdAt: _wire2api_String(arr[8]),
    );
  }

  ResponseDTO _wire2api_response_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ResponseDTO(
      headers: _wire2api_list_entry_dto(arr[0]),
      body: _wire2api_String(arr[1]),
    );
  }

  ResultDTO _wire2api_result_dto(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ResultDTO(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
    );
  }

  SendRequestInfo _wire2api_send_request_info(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 1)
      throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return SendRequestInfo(
      infos: _wire2api_list_entry_dto(arr[0]),
    );
  }

  SendRequestResult _wire2api_send_request_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return SendRequestResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      info: _wire2api_send_request_info(arr[2]),
      resp: _wire2api_opt_box_autoadd_response_dto(arr[3]),
    );
  }

  int _wire2api_u16(dynamic raw) {
    return raw as int;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  UniqueIdResult _wire2api_unique_id_result(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return UniqueIdResult(
      code: _wire2api_code(arr[0]),
      msg: _wire2api_String(arr[1]),
      data: _wire2api_i64(arr[2]),
    );
  }
}

// Section: api2wire

@protected
int api2wire_i32(int raw) {
  return raw;
}

@protected
int api2wire_req_type(ReqType raw) {
  return api2wire_i32(raw.index);
}

@protected
int api2wire_u16(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer

class FluentLibPlatform extends FlutterRustBridgeBase<FluentLibWire> {
  FluentLibPlatform(ffi.DynamicLibrary dylib) : super(FluentLibWire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_StringList> api2wire_StringList(List<String> raw) {
    final ans = inner.new_StringList_0(raw.length);
    for (var i = 0; i < raw.length; i++) {
      ans.ref.ptr[i] = api2wire_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_CreateEnvironment> api2wire_box_autoadd_create_environment(
      CreateEnvironment raw) {
    final ptr = inner.new_box_autoadd_create_environment_0();
    _api_fill_to_wire_create_environment(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_SendRequest> api2wire_box_autoadd_send_request(
      SendRequest raw) {
    final ptr = inner.new_box_autoadd_send_request_0();
    _api_fill_to_wire_send_request(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_UpdateEnvironment> api2wire_box_autoadd_update_environment(
      UpdateEnvironment raw) {
    final ptr = inner.new_box_autoadd_update_environment_0();
    _api_fill_to_wire_update_environment(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_UpdateRequest> api2wire_box_autoadd_update_request(
      UpdateRequest raw) {
    final ptr = inner.new_box_autoadd_update_request_0();
    _api_fill_to_wire_update_request(raw, ptr.ref);
    return ptr;
  }

  @protected
  int api2wire_i64(int raw) {
    return raw;
  }

  @protected
  ffi.Pointer<wire_list_entry_dto> api2wire_list_entry_dto(List<EntryDTO> raw) {
    final ans = inner.new_list_entry_dto_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_entry_dto(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_box_autoadd_create_environment(
      CreateEnvironment apiObj, ffi.Pointer<wire_CreateEnvironment> wireObj) {
    _api_fill_to_wire_create_environment(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_send_request(
      SendRequest apiObj, ffi.Pointer<wire_SendRequest> wireObj) {
    _api_fill_to_wire_send_request(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_update_environment(
      UpdateEnvironment apiObj, ffi.Pointer<wire_UpdateEnvironment> wireObj) {
    _api_fill_to_wire_update_environment(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_update_request(
      UpdateRequest apiObj, ffi.Pointer<wire_UpdateRequest> wireObj) {
    _api_fill_to_wire_update_request(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_create_environment(
      CreateEnvironment apiObj, wire_CreateEnvironment wireObj) {
    wireObj.env_name = api2wire_String(apiObj.envName);
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.value = api2wire_String(apiObj.value);
  }

  void _api_fill_to_wire_entry_dto(EntryDTO apiObj, wire_EntryDTO wireObj) {
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.value = api2wire_String(apiObj.value);
  }

  void _api_fill_to_wire_send_request(
      SendRequest apiObj, wire_SendRequest wireObj) {
    wireObj.request_id = api2wire_i64(apiObj.requestId);
    wireObj.url = api2wire_String(apiObj.url);
    wireObj.req_type = api2wire_req_type(apiObj.reqType);
    wireObj.headers = api2wire_list_entry_dto(apiObj.headers);
    wireObj.params = api2wire_list_entry_dto(apiObj.params);
    wireObj.req_json = api2wire_String(apiObj.reqJson);
    wireObj.env_name = api2wire_String(apiObj.envName);
  }

  void _api_fill_to_wire_update_environment(
      UpdateEnvironment apiObj, wire_UpdateEnvironment wireObj) {
    wireObj.id = api2wire_i64(apiObj.id);
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.value = api2wire_String(apiObj.value);
  }

  void _api_fill_to_wire_update_request(
      UpdateRequest apiObj, wire_UpdateRequest wireObj) {
    wireObj.id = api2wire_i64(apiObj.id);
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.url = api2wire_String(apiObj.url);
    wireObj.method = api2wire_String(apiObj.method);
    wireObj.headers = api2wire_list_entry_dto(apiObj.headers);
    wireObj.params = api2wire_list_entry_dto(apiObj.params);
    wireObj.req_json = api2wire_String(apiObj.reqJson);
    wireObj.resp_json = api2wire_String(apiObj.respJson);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class FluentLibWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FluentLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FluentLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>(
          'get_dart_object');
  late final _get_dart_object =
      _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          'drop_dart_object');
  late final _drop_dart_object =
      _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>(
          'new_dart_opaque');
  late final _new_dart_opaque =
      _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_init(
    int port_,
  ) {
    return _wire_init(
      port_,
    );
  }

  late final _wire_initPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_init');
  late final _wire_init = _wire_initPtr.asFunction<void Function(int)>();

  void wire_import_proto(
    int port_,
    int project_id,
    ffi.Pointer<wire_StringList> proto_files,
    ffi.Pointer<wire_StringList> import_paths,
  ) {
    return _wire_import_proto(
      port_,
      project_id,
      proto_files,
      import_paths,
    );
  }

  late final _wire_import_protoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Int64, ffi.Pointer<wire_StringList>,
              ffi.Pointer<wire_StringList>)>>('wire_import_proto');
  late final _wire_import_proto = _wire_import_protoPtr.asFunction<
      void Function(int, int, ffi.Pointer<wire_StringList>,
          ffi.Pointer<wire_StringList>)>();

  void wire_get_proto_file(
    int port_,
    int project_id,
  ) {
    return _wire_get_proto_file(
      port_,
      project_id,
    );
  }

  late final _wire_get_proto_filePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_get_proto_file');
  late final _wire_get_proto_file =
      _wire_get_proto_filePtr.asFunction<void Function(int, int)>();

  void wire_list_nav_project(
    int port_,
  ) {
    return _wire_list_nav_project(
      port_,
    );
  }

  late final _wire_list_nav_projectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_list_nav_project');
  late final _wire_list_nav_project =
      _wire_list_nav_projectPtr.asFunction<void Function(int)>();

  void wire_create_project(
    int port_,
    ffi.Pointer<wire_uint_8_list> name,
    int req_type,
  ) {
    return _wire_create_project(
      port_,
      name,
      req_type,
    );
  }

  late final _wire_create_projectPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Int32)>>('wire_create_project');
  late final _wire_create_project = _wire_create_projectPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>, int)>();

  void wire_get_config(
    int port_,
    ffi.Pointer<wire_uint_8_list> key,
  ) {
    return _wire_get_config(
      port_,
      key,
    );
  }

  late final _wire_get_configPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_get_config');
  late final _wire_get_config = _wire_get_configPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_batch_config(
    int port_,
    ffi.Pointer<wire_StringList> keys,
  ) {
    return _wire_get_batch_config(
      port_,
      keys,
    );
  }

  late final _wire_get_batch_configPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_StringList>)>>('wire_get_batch_config');
  late final _wire_get_batch_config = _wire_get_batch_configPtr
      .asFunction<void Function(int, ffi.Pointer<wire_StringList>)>();

  void wire_put_config(
    int port_,
    ffi.Pointer<wire_uint_8_list> key,
    ffi.Pointer<wire_uint_8_list> value,
  ) {
    return _wire_put_config(
      port_,
      key,
      value,
    );
  }

  late final _wire_put_configPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_put_config');
  late final _wire_put_config = _wire_put_configPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_delete_configs(
    int port_,
    ffi.Pointer<wire_StringList> keys,
  ) {
    return _wire_delete_configs(
      port_,
      keys,
    );
  }

  late final _wire_delete_configsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_StringList>)>>('wire_delete_configs');
  late final _wire_delete_configs = _wire_delete_configsPtr
      .asFunction<void Function(int, ffi.Pointer<wire_StringList>)>();

  void wire_delete_project(
    int port_,
    int project_id,
  ) {
    return _wire_delete_project(
      port_,
      project_id,
    );
  }

  late final _wire_delete_projectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_delete_project');
  late final _wire_delete_project =
      _wire_delete_projectPtr.asFunction<void Function(int, int)>();

  void wire_update_project_name(
    int port_,
    int project_id,
    ffi.Pointer<wire_uint_8_list> new_name,
  ) {
    return _wire_update_project_name(
      port_,
      project_id,
      new_name,
    );
  }

  late final _wire_update_project_namePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_update_project_name');
  late final _wire_update_project_name = _wire_update_project_namePtr
      .asFunction<void Function(int, int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_request(
    int port_,
    int request_id,
  ) {
    return _wire_get_request(
      port_,
      request_id,
    );
  }

  late final _wire_get_requestPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_get_request');
  late final _wire_get_request =
      _wire_get_requestPtr.asFunction<void Function(int, int)>();

  void wire_update_request(
    int port_,
    ffi.Pointer<wire_UpdateRequest> request,
  ) {
    return _wire_update_request(
      port_,
      request,
    );
  }

  late final _wire_update_requestPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_UpdateRequest>)>>('wire_update_request');
  late final _wire_update_request = _wire_update_requestPtr
      .asFunction<void Function(int, ffi.Pointer<wire_UpdateRequest>)>();

  void wire_send_request(
    int port_,
    ffi.Pointer<wire_SendRequest> param,
  ) {
    return _wire_send_request(
      port_,
      param,
    );
  }

  late final _wire_send_requestPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_SendRequest>)>>('wire_send_request');
  late final _wire_send_request = _wire_send_requestPtr
      .asFunction<void Function(int, ffi.Pointer<wire_SendRequest>)>();

  void wire_create_env(
    int port_,
    ffi.Pointer<wire_CreateEnvironment> param,
  ) {
    return _wire_create_env(
      port_,
      param,
    );
  }

  late final _wire_create_envPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_CreateEnvironment>)>>('wire_create_env');
  late final _wire_create_env = _wire_create_envPtr
      .asFunction<void Function(int, ffi.Pointer<wire_CreateEnvironment>)>();

  void wire_update_env_variable(
    int port_,
    ffi.Pointer<wire_UpdateEnvironment> param,
  ) {
    return _wire_update_env_variable(
      port_,
      param,
    );
  }

  late final _wire_update_env_variablePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_UpdateEnvironment>)>>(
      'wire_update_env_variable');
  late final _wire_update_env_variable = _wire_update_env_variablePtr
      .asFunction<void Function(int, ffi.Pointer<wire_UpdateEnvironment>)>();

  void wire_update_env_name(
    int port_,
    ffi.Pointer<wire_uint_8_list> new_name,
    ffi.Pointer<wire_uint_8_list> old_name,
  ) {
    return _wire_update_env_name(
      port_,
      new_name,
      old_name,
    );
  }

  late final _wire_update_env_namePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_update_env_name');
  late final _wire_update_env_name = _wire_update_env_namePtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_delete_env_variable(
    int port_,
    int id,
  ) {
    return _wire_delete_env_variable(
      port_,
      id,
    );
  }

  late final _wire_delete_env_variablePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_delete_env_variable');
  late final _wire_delete_env_variable =
      _wire_delete_env_variablePtr.asFunction<void Function(int, int)>();

  void wire_delete_env(
    int port_,
    ffi.Pointer<wire_uint_8_list> env_name,
  ) {
    return _wire_delete_env(
      port_,
      env_name,
    );
  }

  late final _wire_delete_envPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_delete_env');
  late final _wire_delete_env = _wire_delete_envPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_list_env(
    int port_,
  ) {
    return _wire_list_env(
      port_,
    );
  }

  late final _wire_list_envPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_list_env');
  late final _wire_list_env =
      _wire_list_envPtr.asFunction<void Function(int)>();

  void wire_unique_id(
    int port_,
  ) {
    return _wire_unique_id(
      port_,
    );
  }

  late final _wire_unique_idPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_unique_id');
  late final _wire_unique_id =
      _wire_unique_idPtr.asFunction<void Function(int)>();

  void wire_lib_info(
    int port_,
  ) {
    return _wire_lib_info(
      port_,
    );
  }

  late final _wire_lib_infoPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_lib_info');
  late final _wire_lib_info =
      _wire_lib_infoPtr.asFunction<void Function(int)>();

  void wire_list_next_request_log(
    int port_,
    int last_id,
    ffi.Pointer<wire_uint_8_list> keyword,
    int page_size,
  ) {
    return _wire_list_next_request_log(
      port_,
      last_id,
      keyword,
      page_size,
    );
  }

  late final _wire_list_next_request_logPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Uint16)>>('wire_list_next_request_log');
  late final _wire_list_next_request_log =
      _wire_list_next_request_logPtr.asFunction<
          void Function(int, int, ffi.Pointer<wire_uint_8_list>, int)>();

  void wire_list_pre_request_log(
    int port_,
    int first_id,
    ffi.Pointer<wire_uint_8_list> keyword,
    int page_size,
  ) {
    return _wire_list_pre_request_log(
      port_,
      first_id,
      keyword,
      page_size,
    );
  }

  late final _wire_list_pre_request_logPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Uint16)>>('wire_list_pre_request_log');
  late final _wire_list_pre_request_log =
      _wire_list_pre_request_logPtr.asFunction<
          void Function(int, int, ffi.Pointer<wire_uint_8_list>, int)>();

  void wire_get_latest_request_log(
    int port_,
    int request_id,
  ) {
    return _wire_get_latest_request_log(
      port_,
      request_id,
    );
  }

  late final _wire_get_latest_request_logPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_get_latest_request_log');
  late final _wire_get_latest_request_log =
      _wire_get_latest_request_logPtr.asFunction<void Function(int, int)>();

  ffi.Pointer<wire_StringList> new_StringList_0(
    int len,
  ) {
    return _new_StringList_0(
      len,
    );
  }

  late final _new_StringList_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_StringList> Function(ffi.Int32)>>(
      'new_StringList_0');
  late final _new_StringList_0 = _new_StringList_0Ptr
      .asFunction<ffi.Pointer<wire_StringList> Function(int)>();

  ffi.Pointer<wire_CreateEnvironment> new_box_autoadd_create_environment_0() {
    return _new_box_autoadd_create_environment_0();
  }

  late final _new_box_autoadd_create_environment_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_CreateEnvironment> Function()>>(
      'new_box_autoadd_create_environment_0');
  late final _new_box_autoadd_create_environment_0 =
      _new_box_autoadd_create_environment_0Ptr
          .asFunction<ffi.Pointer<wire_CreateEnvironment> Function()>();

  ffi.Pointer<wire_SendRequest> new_box_autoadd_send_request_0() {
    return _new_box_autoadd_send_request_0();
  }

  late final _new_box_autoadd_send_request_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_SendRequest> Function()>>(
          'new_box_autoadd_send_request_0');
  late final _new_box_autoadd_send_request_0 =
      _new_box_autoadd_send_request_0Ptr
          .asFunction<ffi.Pointer<wire_SendRequest> Function()>();

  ffi.Pointer<wire_UpdateEnvironment> new_box_autoadd_update_environment_0() {
    return _new_box_autoadd_update_environment_0();
  }

  late final _new_box_autoadd_update_environment_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_UpdateEnvironment> Function()>>(
      'new_box_autoadd_update_environment_0');
  late final _new_box_autoadd_update_environment_0 =
      _new_box_autoadd_update_environment_0Ptr
          .asFunction<ffi.Pointer<wire_UpdateEnvironment> Function()>();

  ffi.Pointer<wire_UpdateRequest> new_box_autoadd_update_request_0() {
    return _new_box_autoadd_update_request_0();
  }

  late final _new_box_autoadd_update_request_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_UpdateRequest> Function()>>(
          'new_box_autoadd_update_request_0');
  late final _new_box_autoadd_update_request_0 =
      _new_box_autoadd_update_request_0Ptr
          .asFunction<ffi.Pointer<wire_UpdateRequest> Function()>();

  ffi.Pointer<wire_list_entry_dto> new_list_entry_dto_0(
    int len,
  ) {
    return _new_list_entry_dto_0(
      len,
    );
  }

  late final _new_list_entry_dto_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_list_entry_dto> Function(
              ffi.Int32)>>('new_list_entry_dto_0');
  late final _new_list_entry_dto_0 = _new_list_entry_dto_0Ptr
      .asFunction<ffi.Pointer<wire_list_entry_dto> Function(int)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_uint_8_list> Function(
              ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturn');
  late final _free_WireSyncReturn =
      _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

class _Dart_Handle extends ffi.Opaque {}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

class wire_StringList extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_uint_8_list>> ptr;

  @ffi.Int32()
  external int len;
}

class wire_EntryDTO extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> value;
}

class wire_list_entry_dto extends ffi.Struct {
  external ffi.Pointer<wire_EntryDTO> ptr;

  @ffi.Int32()
  external int len;
}

class wire_UpdateRequest extends ffi.Struct {
  @ffi.Int64()
  external int id;

  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> url;

  external ffi.Pointer<wire_uint_8_list> method;

  external ffi.Pointer<wire_list_entry_dto> headers;

  external ffi.Pointer<wire_list_entry_dto> params;

  external ffi.Pointer<wire_uint_8_list> req_json;

  external ffi.Pointer<wire_uint_8_list> resp_json;
}

class wire_SendRequest extends ffi.Struct {
  @ffi.Int64()
  external int request_id;

  external ffi.Pointer<wire_uint_8_list> url;

  @ffi.Int32()
  external int req_type;

  external ffi.Pointer<wire_list_entry_dto> headers;

  external ffi.Pointer<wire_list_entry_dto> params;

  external ffi.Pointer<wire_uint_8_list> req_json;

  external ffi.Pointer<wire_uint_8_list> env_name;
}

class wire_CreateEnvironment extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> env_name;

  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> value;
}

class wire_UpdateEnvironment extends ffi.Struct {
  @ffi.Int64()
  external int id;

  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> value;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;

const int BUILD_NUM = 162;
